

# SRoll3 parameter file generated by /scratch/cnt0028/ias1717/SHARED/bware/wrk_sroll21/run_stim/run_srollstim_sroll2.pyc
# for smottet
# on OCCIGEN
# at Fri Oct 18 14:17:10 2019

# PARAMETERS

#BeginRing   = 240
#EndRing     = 26050

import healpy as hp
import numpy as np

def main(): 
  
  bolo=['857-1','857-2','857-3','857-4']
  bolo2=['25_857_1','35_857_2','65_857_3','74_857_4']
  nbolo=len(bolo)
  BeginRing   = 240
  EndRing     = 26050


  RSTEP       = 1000  

  
  CUTRG      = 1
  D_NOPOL    = 0
  Nside      = 64
  #Nside      = 4096
  
  # if ==1 make the absolute gain equal to 1
  NORM_GAIN = 1
  REMOVE_CAL = 1
  
  ADDDIP     = 0
  KCMBIN     = 0
  SAVEINTMAP = 0
  TESTPOL    = 1
  XI2STOP    = 1.0
  seuilcond  = 1000
  NITT       = 2
  FITANGLE   = 0
  FITPOLEFF  = 0
  saveCOV    = 0
  saveCO     = 0
  delta_psi  = 0.0 # change to tab for each detectors
  verbose    = 0
  TEMPLATE_NSIDE = 1024
  #POSSIBLE BUG
  #BUILDTF    = 4
  BUILDTF = 0
  
  SEED = [1234]
  
  GAINSTEP = 1

  # --------------------------------------------------------- #  
  ## Foscat params 

  #do_foscat = 1 # flag for run foscat 
  do_foscat = [1,0] # len(NITT)
  do_templates = [1,2,0,0,0,0,0,0,0] # define at wich templates to apply foscat correct : have to be len of theo_HPR

  # --------------------------------------------------------- #


  NADU = [1,1,1,1] #[16,16,16,16]
  NADUSTEP = [1,1,1,1]
  DOCNN = [0,0,0,0,0,0,0]

  val_mean = [0,0,0,0]

  w_mean = [1E8,1E8,1E8,1E8]

  do_mean  = []
  # mean of H0

  for j in range(4):
    do_mean=do_mean+[int((i//4)==j+40) for i in range(4*7)]

  val_mean=[]
  w_mean=[]
  do_mean=[]
  
  CALLCNN = "/export/home/tfoulquier/workspace/SROLL/srollex/sroll4/py_fct_foscat.py"

  CNN_START = NITT +1
  #PARAMETRES DIMENSION CNN: 12*32*32 carte Nside  =12 et 2 canaux Q et U
  CNN_XSIZE = 256
  CNN_YSIZE = 256
  CNN_RESIDU = 0.0
  CNN_WEIGHTS = "/home1/scratch/jmdeloui/WIDXR_files"

  N_IN_ITT = 300

  #Path for netcdf
  INST_CNN = '/home3/homedir7/perso/tfoulqui/workspace/srollexx_work/sroll'
  MAP_CNN =  '/home3/homedir7/perso/tfoulqui/workspace/srollexx_work/sroll'
  

  #pour PDUST calib == 1 && NEP == 1
   
  Calibration = [1.0,1.0,1.0,1.0]
  NEP = [1.0,1.0,1.0,1.0]
  CrossPol = [0.0,0.0,0.0,0.0]
  
  delta_psi  = [0.0,0.0,0.0,0.0]

  a = [1.72218,-3.37029,4.32691,2.634]
  b = [3.56255,1.02448,1.98421,3.52853]

  #pour pdust crosspol == 0
  #else :
  
  Pe = [7.8,6.3,8.6,6.3]
  for i in range(nbolo):
    CrossPol[i] = (1-Pe[i]/100)/(1+Pe[i]/100)
  
   
  Calibration = [3.30076826046e-16,3.55811287601e-16,3.18681631353e-16,2.219187708e-16]
  NEP = [2.17663807827e-16,2.36372259024e-16, 2.08546999122e-16,2.01804359351e-16]
  


  Monop = [2.7228011807e-14,3.20205460445e-14,2.14043411258e-14,3.3436884405e-14]
  # 857GHz


  OUT_NOPOL = [1] #,1,1,1,1]

  # bolomask for 857ghz map
  bolomask = [1,1,1,1,
              1,0,0,0,
              0,1,0,0,
              0,0,1,0,
              0,0,0,1]

  beg_surv=[240,240,13144,240,5720,11194,16691,21720]
  end_surv=[26050,13145,26050,5721,11195,16692,21721,27005]
  name_surv=['full','hm1','hm2','s1','s2','s3','s4','s5']
  MAPRINGS = [1,1,1,1]#[1] #,8,8,8,8]
  

  ### INPUTS
   
  Mask = "/export/home1/tfoulquier/data_sroll/MAP/mask_RD_857"
  #Mask = "/export/home1/jmdeloui/CARINA_MASK.float32.bin"
  #Mask = "/export/home1/tfoulquier/data_sroll/MAP/mask_carina_4096.float32.bin"
  #Mask = "/export/home/tfoulquier/python_scripts/CRAB_mask"

  projectionType = "I,Q,U" #,Q,U"
  in_template_map= []

  for i in range(nbolo):
    in_template_map += ["/export/home1/jmdeloui/DATA4SROLL4/map_857_2018.float32.bin"]#for i in range(nbolo)] 
    in_template_map += ["/export/home1/tfoulquier/data_sroll/MAP/map_null.float32.bin"]# for i in range(nbolo)]
    in_template_map += ["/export/home1/tfoulquier/data_sroll/MAP/map_null.float32.bin"]#for i in range(nbolo)]


  Signal_noPS = ['/export/home1/jmdeloui/DATA4SROLL4/%s_REP6_splinefill_JAN20'%(i) for i in bolo]
  #Signal_noPS = ["/export/home1/jmdeloui/DATA4SROLL4/%s_REP6_PDUST"%(i) for i in bolo]
 
  #Signal_noPS =["/export/home1/jmdeloui/DATA4SROLL4/%s_REP6_PDUST"%(i) for i in bolo]
  #['/export/home1/jmdeloui/DATA4SROLL4/%s_REP6_splinefill_JAN20'%(i) for i in bolo]  #["/export/home1/jmdeloui/DATA4SROLL4/%s_REP6_PDUST"%(i) for i in bolo]
  #Signal_noPS = ["/export/home1/jmdeloui/DATA4SROLL4/%s_REP7_2"%(i) for i in bolo]

  #Calibration = [1.0/28.0,1.0/2.0,1.0/9.0,1.0/3.0]
  #NEP = [1.0,1.0,1.0,1.0]

  ADU = ["/export/home1/jmdeloui/DATA4SROLL4/%s_REP6_phregul"%(i) for i in bolo]

  Badring = ["/export/home1/jmdeloui/DATA4SROLL4/%s_discarded_rings_dx11"%(i) for i in bolo2]
  #Badring = ["/export/home/tfoulquier/python_scripts/crab_discarded_rings_%s"%(i) for i in bolo]

  HPR_Calib = ["/export/home1/jmdeloui/DATA4SROLL4/%s_REP6_diporb_quat"%(i) for i in bolo]  

  Hit_noPS = ["/export/home1/jmdeloui/DATA4SROLL4/%s_REP6_hit"%(i) for i in bolo]

  Ptg_noPS = ["/export/home1/jmdeloui/DATA4SROLL4/%s_REP6_ptg"%(i) for i in bolo]

 
  Theo_MAP = ['/export/home1/jmdeloui/DATA4SROLL4/NEW_cleaned_12CO.float32.bin',
              '/export/home1/jmdeloui/DATA4SROLL4/FREE_FREE_mod.float32.bin',
              '/export/home1/jmdeloui/DATA4SROLL4/Dust_New_I']
  
 
  # remove for polar
  Theo_HPR = ["/export/home1/jmdeloui/DATA4SROLL4/%s_REP6_PDUST"%(i) for i in bolo]
  Theo_HPR = Theo_HPR +["/export/home1/jmdeloui/DATA4SROLL4/%s_REP6_ODUST"%(i) for i in bolo] 
  Theo_HPR = Theo_HPR +["/export/home1/jmdeloui/DATA4SROLL4/%s_REP6_GRAD"%(i) for i in bolo]
  Theo_HPR = Theo_HPR +["/export/home1/jmdeloui/DATA4SROLL4/%s_REP7_2"%(i) for i in bolo]
  Theo_HPR = Theo_HPR +['/export/home1/jmdeloui/DATA4SROLL4/%s_REP6_H0'%(i) for i in bolo]
  Theo_HPR = Theo_HPR +['/export/home1/jmdeloui/DATA4SROLL4/%s_REP6_H1'%(i) for i in bolo]
  Theo_HPR = Theo_HPR +['/export/home1/jmdeloui/DATA4SROLL4/%s_REP6_H2'%(i) for i in bolo]
  Theo_HPR = Theo_HPR +['/export/home1/jmdeloui/DATA4SROLL4/%s_REP6_H3'%(i) for i in bolo]

  phase = ["/export/home1/jmdeloui/DATA4SROLL4/%s_REP6_phregul"%(i) for i in bolo]
  rgcnn = ["/export/home1/jmdeloui/DATA4SROLL4/%s_REP6_rgadutot.int32.bin"%(i) for i in bolo]

  ### OUTPUTS
  bolo_map = ['DEBUG_foscat_857GHz_IQU_fullsky'] #,'857-1','857-2','857-3','857-4']
  #badring2 == badring carina mask 

  Out_MAP = ["/export/home/tfoulquier/MAP/857_maps/temp_OUT%d_%s"%(Nside,i)  for i in bolo_map]

  Out_VEC = ["/export/home/tfoulquier/VEC/857_vecs/temp_OUT%d_%s_offset"%(Nside,i) for i in bolo]

  params  =vars()

  return params
